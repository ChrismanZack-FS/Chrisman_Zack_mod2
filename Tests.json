{
	"info": {
		"_postman_id": "f6fe2e88-96bd-4094-be0d-f5fa69d79633",
		"name": "Faction",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38696643"
	},
	"item": [
		{
			"name": "Necrons",
			"item": [
				{
					"name": "Add Necron",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Staus code is 200 (created)\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Response has created resource ID\", function(){\r",
									"    const responseBody = pm.response.json();\r",
									"    pm.expect(responseBody.data).to.have.property(\"_id\").that.is.not.null;\r",
									"    pm.expect(responseBody.data._id).to.have.lengthOf(24)\r",
									"\r",
									"pm.collectionVariables.set(\"necronId\",responseBody.data._id);});\r",
									"\r",
									"pm.test(\"The response has all properties\",()=>{\r",
									"    const responseBody = pm.response.json();\r",
									"    const{data}=responseBody;\r",
									"    pm.expect(data.name).to.be.a(`string`);\r",
									"    pm.expect(data.name).to.eql(\"Wraith\");\r",
									"    pm.expect(data.toughness).to.eql(6);\r",
									"    pm.expect(data.toughness).to.be.a(`number`);\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"necron\":{\r\n    \"name\":\"Wraith\",\r\n    \"toughness\":\"6\",\r\n    \"keywords\":\"Character\",\r\n    \"strength\":\"6\"\r\n  \r\n\r\n}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/api/v1/necrons",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"v1",
								"necrons"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Necrons",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Staus code is 200 (created)\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Response is an array\", function() {\r",
									"    const responseBody = pm.response.json();\r",
									"    pm.expect(responseBody.data).to.be.an('array').that.is.not.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"First resource has correct properties\", () => {\r",
									"    const responseBody = pm.response.json();\r",
									"    const firstNecron = responseBody.data[0];\r",
									"    \r",
									"    pm.expect(firstNecron).to.have.property(\"_id\").that.is.not.null;\r",
									"    pm.expect(firstNecron._id).to.have.lengthOf(24);\r",
									"    pm.expect(firstNecron.name).to.be.a('string').and.to.eql(\"Wraith\");\r",
									"    pm.expect(firstNecron.toughness).to.be.a('number').and.to.eql(6);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/api/v1/necrons",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"v1",
								"necrons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Necron By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 (OK)\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"const necronId = pm.collectionVariables.get(\"necronId\"); \r",
									"\r",
									"\r",
									"pm.test(\"Has the correct ID\", function() {\r",
									"    const responseBody = pm.response.json();\r",
									"    pm.expect(responseBody.data).to.have.property(\"_id\").that.is.equal(necronId);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Resource has correct properties\", () => {\r",
									"    const responseBody = pm.response.json();\r",
									"    const firstNecron = responseBody.data; \r",
									"    \r",
									"    pm.expect(firstNecron).to.have.property(\"_id\").that.is.not.null;\r",
									"    pm.expect(firstNecron._id).to.have.lengthOf(24);\r",
									"    pm.expect(firstNecron.name).to.be.a('string').and.to.eql(\"Wraith\");\r",
									"    pm.expect(firstNecron.toughness).to.be.a('number').and.to.eql(6);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/api/v1/necrons/{{necronId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"v1",
								"necrons",
								"{{necronId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Necron",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let necronId = pm.collectionVariables.get(\"necronId\"); \r",
									"console.log(necronId)\r",
									"\r",
									"pm.test(\"Status code is 200 (OK)\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									" necronId = pm.collectionVariables.get(\"necronId\"); \r",
									"console.log(necronId)\r",
									"\r",
									"pm.test(\"Has the correct ID\", function() {\r",
									"    const responseBody = pm.response.json();\r",
									"    pm.expect(responseBody.data).to.have.property(\"_id\").that.is.equal(necronId);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Resource has correct properties\", () => {\r",
									"    const responseBody = pm.response.json();\r",
									"    const firstNecron = responseBody.data; \r",
									"    \r",
									"    pm.expect(firstNecron).to.have.property(\"_id\").that.is.not.null;\r",
									"    pm.expect(firstNecron._id).to.have.lengthOf(24);\r",
									"    pm.expect(firstNecron.name).to.be.a('string').and.to.eql(\"Immortal\");\r",
									"    pm.expect(firstNecron.toughness).to.be.a('number').and.to.eql(5);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"Immortal\",\r\n\"toughness\":\"5\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/api/v1/necrons/{{necronId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"v1",
								"necrons",
								"{{necronId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Necron",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"No Necrons left.\", function() {\r",
									"    const responseBody = pm.response.json();\r",
									"    pm.expect(responseBody).to.have.property('success').that.is.equal(true);\r",
									"});\r",
									"\r",
									"\r",
									"const necronId = pm.collectionVariables.get(\"necronId\"); \r",
									"\r",
									"pm.test(\"Necrons are dead\", function() {\r",
									"    pm.sendRequest({\r",
									"        url: `http://localhost:3001/api/v1/necrons/{necronId}`,\r",
									"        method: 'GET'\r",
									"    }, function (err, res) {\r",
									"        pm.expect(res).to.have.status(422); \r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/api/v1/necrons/{{necronId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"v1",
								"necrons",
								"{{necronId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Spacemarines",
			"item": [
				{
					"name": "Add Marine",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"marine\":{\r\n    \"name\":\"Astartes\",\r\n    \"toughness\":\"4\",\r\n    \"keywords\":\"Character\",\r\n    \"strength\":\"6\",\r\n    \"game\":\r\n   \r\n  \r\n\r\n}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/api/v1/marines",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"v1",
								"marines"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Marines",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/api/v1/marines/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"v1",
								"marines",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Marine By ID",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Update Marine",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"Marneus Calgar\",\r\n\"keywords\":\"Character\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/api/v1/marines/6706b65ea3e72a1fcee57968",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"v1",
								"marines",
								"6706b65ea3e72a1fcee57968"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Marine",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/api/v1/marines/6706b65ea3e72a1fcee57968",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"v1",
								"marines",
								"6706b65ea3e72a1fcee57968"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get All",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "necronId",
			"value": ""
		}
	]
}